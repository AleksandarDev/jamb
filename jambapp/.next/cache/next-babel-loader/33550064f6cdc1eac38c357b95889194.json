{"ast":null,"code":"import _toConsumableArray from \"/Users/aleksandartoplek/Documents/jamb/jambapp/.yarn/cache/@babel-runtime-npm-7.7.2-f97af02eaa-1.zip/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nvar data = {\n  userName: \"userName\"\n};\nvar apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nvar Index = function Index() {\n  var _useState = useState(false),\n      isReady = _useState[0],\n      setIsReady = _useState[1];\n\n  var _useState2 = useState(new Array()),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      newMessageText = _useState3[0],\n      setNewMessageText = _useState3[1];\n\n  var sendMessageClick = function sendMessageClick() {\n    sendMessage(data.userName, newMessageText);\n  };\n\n  function sendMessage(sender, messageText) {\n    return axios.post(\"\".concat(apiBaseUrl, \"/api/messages\"), {\n      sender: sender,\n      text: messageText\n    }).then(function (resp) {\n      return resp.data;\n    });\n  }\n\n  var counter = 0;\n\n  function newMessage(message) {\n    message.id = counter++; // vue transitions need an id\n\n    messages.unshift(message);\n    setMessages(_toConsumableArray(messages));\n  }\n\n  useEffect(function () {\n    var connection = new window.signalR.HubConnectionBuilder().withUrl(\"\".concat(apiBaseUrl, \"/api\")).configureLogging(window.signalR.LogLevel.Information).build();\n    connection.on('newMessage', newMessage);\n    connection.onclose(function () {\n      return console.log('disconnected');\n    });\n    connection.start().then(function () {\n      return setIsReady(true);\n    })[\"catch\"](function (err) {\n      console.error(err);\n      setIsReady(false);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"JAMB\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, isReady ? \"Connected\" : \"Loading...\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: newMessageText,\n    onChange: function onChange(e) {\n      return setNewMessageText(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return sendMessageClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Salji\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, messages.map(function (message) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"(\", message.id, \") \", message.text);\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx"],"names":["React","useEffect","useState","axios","data","userName","apiBaseUrl","Index","isReady","setIsReady","Array","messages","setMessages","newMessageText","setNewMessageText","sendMessageClick","sendMessage","sender","messageText","post","text","then","resp","counter","newMessage","message","id","unshift","connection","window","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","onclose","console","log","start","err","error","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst data = {\n  userName: \"userName\",\n};\n\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nconst Index = () => {\n  const [isReady, setIsReady] = useState(false);\n  const [messages, setMessages] = useState(new Array());\n  const [newMessageText, setNewMessageText] = useState('');\n\n  const sendMessageClick = () => {\n    sendMessage(data.userName, newMessageText);\n  };\n\n  function sendMessage(sender, messageText) {\n    return axios.post(`${apiBaseUrl}/api/messages`, {\n      sender: sender,\n      text: messageText\n    }).then(resp => resp.data);\n  }\n\n  let counter = 0;\n  function newMessage(message) {\n    message.id = counter++; // vue transitions need an id\n    messages.unshift(message);\n    setMessages([...messages]);\n  }\n\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder()\n      .withUrl(`${apiBaseUrl}/api`)\n      .configureLogging(window.signalR.LogLevel.Information)\n      .build();\n\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n\n    connection.start()\n      .then(() => setIsReady(true))\n      .catch((err) => {console.error(err); setIsReady(false);});\n  }, []);\n\n  return (\n    <div>\n      <h1>JAMB</h1>\n      <div>{isReady ? \"Connected\" : \"Loading...\"}</div>\n      <div>\n        <input value={newMessageText} onChange={(e) => setNewMessageText(e.target.value)} />\n        <button onClick={() => sendMessageClick()}>Salji</button>\n      </div>\n      <div>\n        {messages.map((message) => (\n          <div>({message.id}) {message.text}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}