{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nvar data = {\n  userName: \"userName\"\n};\nvar apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nfunction sendMessage(sender, messageText) {\n  return axios.post(\"\".concat(apiBaseUrl, \"/api/messages\"), {\n    sender: sender,\n    text: messageText\n  }).then(function (resp) {\n    return resp.data;\n  });\n}\n\nvar counter = 0;\n\nfunction newMessage(message) {\n  message.id = counter++; // vue transitions need an id\n\n  data.messages.unshift(message);\n}\n\nvar Index = function Index() {\n  var _useState = useState(false),\n      isReady = _useState[0],\n      setIsReady = _useState[1];\n\n  useEffect(function () {\n    var connection = new window.signalR.HubConnectionBuilder().withUrl(\"\".concat(apiBaseUrl, \"/api\")).configureLogging(window.signalR.LogLevel.Information).build();\n    connection.on('newMessage', newMessage);\n    connection.onclose(function () {\n      return console.log('disconnected');\n    });\n    connection.start().then(function () {\n      return data.ready = true;\n    })[\"catch\"](console.error);\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Jamb\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, isReady ? \"Spajanje...\" : \"Spojen\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx"],"names":["React","useEffect","useState","data","userName","apiBaseUrl","sendMessage","sender","messageText","axios","post","text","then","resp","counter","newMessage","message","id","messages","unshift","Index","isReady","setIsReady","connection","window","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","onclose","console","log","start","ready","error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE;AADC,CAAb;AAIA,IAAMC,UAAU,GAAG,gCAAnB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,WAA7B,EAA0C;AACxC,SAAOC,KAAK,CAACC,IAAN,WAAcL,UAAd,oBAAyC;AAC9CE,IAAAA,MAAM,EAAEA,MADsC;AAE9CI,IAAAA,IAAI,EAAEH;AAFwC,GAAzC,EAGJI,IAHI,CAGC,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACV,IAAT;AAAA,GAHL,CAAP;AAID;;AAED,IAAIW,OAAO,GAAG,CAAd;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3BA,EAAAA,OAAO,CAACC,EAAR,GAAaH,OAAO,EAApB,CAD2B,CACH;;AACxBX,EAAAA,IAAI,CAACe,QAAL,CAAcC,OAAd,CAAsBH,OAAtB;AACD;;AAED,IAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACYlB,QAAQ,CAAC,KAAD,CADpB;AAAA,MACXmB,OADW;AAAA,MACFC,UADE;;AAGlBrB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMsB,UAAU,GAAG,IAAIC,MAAM,CAACC,OAAP,CAAeC,oBAAnB,GAChBC,OADgB,WACLtB,UADK,WAEhBuB,gBAFgB,CAECJ,MAAM,CAACC,OAAP,CAAeI,QAAf,CAAwBC,WAFzB,EAGhBC,KAHgB,EAAnB;AAKAR,IAAAA,UAAU,CAACS,EAAX,CAAc,YAAd,EAA4BjB,UAA5B;AACAQ,IAAAA,UAAU,CAACU,OAAX,CAAmB;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,KAAnB;AAEAZ,IAAAA,UAAU,CAACa,KAAX,GACGxB,IADH,CACQ;AAAA,aAAMT,IAAI,CAACkC,KAAL,GAAa,IAAnB;AAAA,KADR,WAESH,OAAO,CAACI,KAFjB;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMjB,OAAO,GAAG,aAAH,GAAmB,QAAhC,CAFF,CADF;AAMD,CAvBD;;AAyBA,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst data = {\n  userName: \"userName\",\n};\n\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nfunction sendMessage(sender, messageText) {\n  return axios.post(`${apiBaseUrl}/api/messages`, {\n    sender: sender,\n    text: messageText\n  }).then(resp => resp.data);\n}\n\nlet counter = 0;\nfunction newMessage(message) {\n  message.id = counter++; // vue transitions need an id\n  data.messages.unshift(message);\n}\n\nconst Index = () => {\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder()\n      .withUrl(`${apiBaseUrl}/api`)\n      .configureLogging(window.signalR.LogLevel.Information)\n      .build();\n\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n\n    connection.start()\n      .then(() => data.ready = true)\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div>\n      <h1>Jamb</h1>\n      <div>{isReady ? \"Spajanje...\" : \"Spojen\"}</div>\n    </div>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}