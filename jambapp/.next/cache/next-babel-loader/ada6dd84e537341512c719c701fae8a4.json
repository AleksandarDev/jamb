{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ChatBox from '../components/Chat/ChatBox';\n\nfunction uuidv4() {\n  return 'xxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst data = {\n  userName: \"guest-\" + uuidv4()\n};\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nconst Index = () => {\n  const {\n    0: isReady,\n    1: setIsReady\n  } = useState(false);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(new Array());\n\n  const sendMessageClick = messageText => {\n    sendMessage(data.userName, messageText);\n  };\n\n  function sendMessage(sender, messageText) {\n    return axios.post(`${apiBaseUrl}/api/messages`, {\n      sender: sender,\n      text: messageText\n    }).then(resp => resp.data);\n  }\n\n  let counter = 0;\n\n  function newMessage(message) {\n    message.id = counter++;\n    messages.unshift(message);\n    setMessages([...messages]);\n  }\n\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder().withUrl(`${apiBaseUrl}/api`).configureLogging(window.signalR.LogLevel.Information).build();\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n    connection.start().then(() => setIsReady(true)).catch(err => {\n      console.error(err);\n      setIsReady(false);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"JAMB\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, data.userName), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, isReady ? \"Connected\" : \"Loading...\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(ChatBox, {\n    messages: messages,\n    onSendMessage: sendMessageClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx"],"names":["React","useEffect","useState","axios","ChatBox","uuidv4","replace","c","r","Math","random","v","toString","data","userName","apiBaseUrl","Index","isReady","setIsReady","messages","setMessages","Array","sendMessageClick","messageText","sendMessage","sender","post","text","then","resp","counter","newMessage","message","id","unshift","connection","window","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","onclose","console","log","start","catch","err","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAEA,SAASC,MAAT,GAAkB;AAChB,SAAO,WAAWC,OAAX,CAAmB,OAAnB,EAA4B,UAASC,CAAT,EAAY;AAC7C,QAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,QAAgCC,CAAC,GAAGJ,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA9D;AACA,WAAOG,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD,GAHM,CAAP;AAID;;AAED,MAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE,WAAWT,MAAM;AADhB,CAAb;AAIA,MAAMU,UAAU,GAAG,gCAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAC,IAAImB,KAAJ,EAAD,CAAxC;;AAEA,QAAMC,gBAAgB,GAAIC,WAAD,IAAiB;AACxCC,IAAAA,WAAW,CAACX,IAAI,CAACC,QAAN,EAAgBS,WAAhB,CAAX;AACD,GAFD;;AAIA,WAASC,WAAT,CAAqBC,MAArB,EAA6BF,WAA7B,EAA0C;AACxC,WAAOpB,KAAK,CAACuB,IAAN,CAAY,GAAEX,UAAW,eAAzB,EAAyC;AAC9CU,MAAAA,MAAM,EAAEA,MADsC;AAE9CE,MAAAA,IAAI,EAAEJ;AAFwC,KAAzC,EAGJK,IAHI,CAGCC,IAAI,IAAIA,IAAI,CAAChB,IAHd,CAAP;AAID;;AAED,MAAIiB,OAAO,GAAG,CAAd;;AACA,WAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3BA,IAAAA,OAAO,CAACC,EAAR,GAAaH,OAAO,EAApB;AACAX,IAAAA,QAAQ,CAACe,OAAT,CAAiBF,OAAjB;AACAZ,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,UAAU,GAAG,IAAIC,MAAM,CAACC,OAAP,CAAeC,oBAAnB,GAChBC,OADgB,CACP,GAAExB,UAAW,MADN,EAEhByB,gBAFgB,CAECJ,MAAM,CAACC,OAAP,CAAeI,QAAf,CAAwBC,WAFzB,EAGhBC,KAHgB,EAAnB;AAKAR,IAAAA,UAAU,CAACS,EAAX,CAAc,YAAd,EAA4Bb,UAA5B;AACAI,IAAAA,UAAU,CAACU,OAAX,CAAmB,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAzB;AAEAZ,IAAAA,UAAU,CAACa,KAAX,GACGpB,IADH,CACQ,MAAMV,UAAU,CAAC,IAAD,CADxB,EAEG+B,KAFH,CAEUC,GAAD,IAAS;AAACJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AAAoBhC,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB,KAF1D;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,IAAI,CAACC,QAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,OAAO,GAAG,WAAH,GAAiB,YAA9B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAEE,QAAnB;AAA6B,IAAA,aAAa,EAAEG,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD,CA9CD;;AAgDA,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ChatBox from '../components/Chat/ChatBox';\n\nfunction uuidv4() {\n  return 'xxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nconst data = {\n  userName: \"guest-\" + uuidv4(),\n};\n\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nconst Index = () => {\n  const [isReady, setIsReady] = useState(false);\n  const [messages, setMessages] = useState(new Array());\n\n  const sendMessageClick = (messageText) => {\n    sendMessage(data.userName, messageText);\n  };\n\n  function sendMessage(sender, messageText) {\n    return axios.post(`${apiBaseUrl}/api/messages`, {\n      sender: sender,\n      text: messageText\n    }).then(resp => resp.data);\n  }\n\n  let counter = 0;\n  function newMessage(message) {\n    message.id = counter++;\n    messages.unshift(message);\n    setMessages([...messages]);\n  }\n\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder()\n      .withUrl(`${apiBaseUrl}/api`)\n      .configureLogging(window.signalR.LogLevel.Information)\n      .build();\n\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n\n    connection.start()\n      .then(() => setIsReady(true))\n      .catch((err) => {console.error(err); setIsReady(false);});\n  }, []);\n\n  return (\n    <div>\n      <h1>JAMB</h1>\n      <div>{data.userName}</div>\n      <div>{isReady ? \"Connected\" : \"Loading...\"}</div>\n      <div>\n        <ChatBox messages={messages} onSendMessage={sendMessageClick} />\n      </div>\n    </div>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}