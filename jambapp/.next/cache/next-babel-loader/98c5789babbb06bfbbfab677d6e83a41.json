{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nconst data = {\n  userName: \"userName\"\n};\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nfunction sendMessage(sender, messageText) {\n  return axios.post(`${apiBaseUrl}/api/messages`, {\n    sender: sender,\n    text: messageText\n  }).then(resp => resp.data);\n}\n\nlet counter = 0;\n\nfunction newMessage(message) {\n  message.id = counter++; // vue transitions need an id\n\n  data.messages.unshift(message);\n}\n\nconst Index = () => {\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder().withUrl(`${apiBaseUrl}/api`).configureLogging(window.signalR.LogLevel.Information).build();\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n    connection.start().then(() => data.ready = true).catch(console.error);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Jamb\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, data.ready));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/aleksandartoplek/Documents/jamb/jambapp/pages/index.jsx"],"names":["React","useEffect","data","userName","apiBaseUrl","sendMessage","sender","messageText","axios","post","text","then","resp","counter","newMessage","message","id","messages","unshift","Index","connection","window","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","onclose","console","log","start","ready","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAE;AADC,CAAb;AAIA,MAAMC,UAAU,GAAG,gCAAnB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,WAA7B,EAA0C;AACxC,SAAOC,KAAK,CAACC,IAAN,CAAY,GAAEL,UAAW,eAAzB,EAAyC;AAC9CE,IAAAA,MAAM,EAAEA,MADsC;AAE9CI,IAAAA,IAAI,EAAEH;AAFwC,GAAzC,EAGJI,IAHI,CAGCC,IAAI,IAAIA,IAAI,CAACV,IAHd,CAAP;AAID;;AAED,IAAIW,OAAO,GAAG,CAAd;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3BA,EAAAA,OAAO,CAACC,EAAR,GAAaH,OAAO,EAApB,CAD2B,CACH;;AACxBX,EAAAA,IAAI,CAACe,QAAL,CAAcC,OAAd,CAAsBH,OAAtB;AACD;;AAED,MAAMI,KAAK,GAAG,MAAM;AAClBlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,UAAU,GAAG,IAAIC,MAAM,CAACC,OAAP,CAAeC,oBAAnB,GAChBC,OADgB,CACP,GAAEpB,UAAW,MADN,EAEhBqB,gBAFgB,CAECJ,MAAM,CAACC,OAAP,CAAeI,QAAf,CAAwBC,WAFzB,EAGhBC,KAHgB,EAAnB;AAKAR,IAAAA,UAAU,CAACS,EAAX,CAAc,YAAd,EAA4Bf,UAA5B;AACAM,IAAAA,UAAU,CAACU,OAAX,CAAmB,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAzB;AAEAZ,IAAAA,UAAU,CAACa,KAAX,GACGtB,IADH,CACQ,MAAMT,IAAI,CAACgC,KAAL,GAAa,IAD3B,EAEGC,KAFH,CAESJ,OAAO,CAACK,KAFjB;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlC,IAAI,CAACgC,KAAX,CAFF,CADF;AAMD,CArBD;;AAuBA,eAAef,KAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nconst data = {\n  userName: \"userName\",\n};\n\nconst apiBaseUrl = \"https://jamb.azurewebsites.net\";\n\nfunction sendMessage(sender, messageText) {\n  return axios.post(`${apiBaseUrl}/api/messages`, {\n    sender: sender,\n    text: messageText\n  }).then(resp => resp.data);\n}\n\nlet counter = 0;\nfunction newMessage(message) {\n  message.id = counter++; // vue transitions need an id\n  data.messages.unshift(message);\n}\n\nconst Index = () => {\n  useEffect(() => {\n    const connection = new window.signalR.HubConnectionBuilder()\n      .withUrl(`${apiBaseUrl}/api`)\n      .configureLogging(window.signalR.LogLevel.Information)\n      .build();\n\n    connection.on('newMessage', newMessage);\n    connection.onclose(() => console.log('disconnected'));\n\n    connection.start()\n      .then(() => data.ready = true)\n      .catch(console.error);\n  }, []);\n\n  return (\n    <div>\n      <h1>Jamb</h1>\n      <div>{data.ready}</div>\n    </div>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}